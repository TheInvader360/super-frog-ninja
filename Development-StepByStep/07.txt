-----

[timer]

double-click objGlobals in the asset browser objects folder
double-click the existing Create event
add a line of code at the end to define the level timer

<objGlobals:Create>
// ...code omitted from example listing

global.levelTimerTicks = 0;
</objGlobals:Create>

double-click objRmLevelController in the asset browser objects folder
double-click the existing Draw GUI event
add a line of code to draw the timer

<objRmLevelController:DrawGUI>
draw_set_font(fntVisitor1);
draw_set_colour(c_yellow);
draw_text(4, 1, "Timer " + string_replace_all(string_format(global.levelTimerTicks/60, 8, 1), " ", ""));
draw_text(4, 21, "Cherries " + string(global.collectedCollectibles) + "/" + string(global.totalCollectibles));
</objRmLevelController:DrawGUI>

double-click the existing Room Start event
add a line of code at the end to reset the timer

<objRmLevelController:RoomStart>
// ...code omitted from example listing

global.levelTimerTicks = 0;
</objRmLevelController:RoomStart>

double-click the existing Step event
add a line of code at the end to increment the timer each tick

<objRmLevelController:RoomStart>
// ...code omitted from example listing

global.levelTimerTicks++;
</objRmLevelController:RoomStart>

double-click objPlayer in the asset browser objects folder
double-click the existing objGoal collision event
add a line of code at the end to print some debug info to the developer console

<objPlayer:Collision-objGoal>
// ...code omitted from example listing

show_debug_message("Timer: " + string_replace_all(string_format(global.levelTimerTicks/60, 8, 1), " ", ""));
</objPlayer:Collision-objGoal>

press f5 to test the timer (confirm it starts from zero on starting/restarting the level, counts up each second, and check the debug message on reaching the goal), press escape when done testing

[intro screen implementation]

drag and drop (using windows explorer) the provided sprBaseIntro.png file (in the Assets folder) into the asset browser sprites folder, origin: top left

double-click rmIntro in the asset browser rooms folder
select the Background layer, click on the "No Sprite" value, select Sprites, then sprBaseIntro
create a new asset layer in the layers section of the inspector tab, set the name value to Text, in grid options (main workspace area toolbar option) disable Snap
re-order the layers if required (drag and drop - Text at the top, Instances in the middle, and Background at the bottom)

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textDescription, position x: 50.5, position y: 95.6, scale x: 1, scale y: 1, colour: cyan (rgb:0,255,255), alignment h: centre, alignment v: centre, text:
Demo with companion game maker tutorials
github.com/TheInvader360/super-frog-ninja

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textAims, position x: 60.5, position y: 95.6, scale x: 1, scale y: 1, colour: magenta (rgb:255,0,255), alignment h: centre, alignment v: centre, text:
Get to the goal as quickly as possible!
Collect as many cherries as you can!

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textInstructionsIntro, position x: 51.0, position y: 95.6, scale x: 1, scale y: 1, colour: yellow (rgb:255,255,0), alignment h: centre, alignment v: centre, text:
< and > keys to run + space key to jump
Press space key to start...

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textCredits1, position x: 6.0, position y: 328.0, scale x: 0.65, scale y: 0.65, colour: green (rgb:0,255,0), alignment h: left, alignment v: centre, text:
Game by TheInvader360
github.com/TheInvader360

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textCredits2, position x: 436.0, position y: 328.0, scale x: 0.65, scale y: 0.65, colour: green (rgb:0,255,0), alignment h: right, alignment v: centre, text:
Pixel art by Pixel Frog
pixelfrog-assets.itch.io

double-click objRmIntroController in the asset browser objects folder
double-click the existing Create event
add a line of code at the end to define the flashing text timer

<objRmIntroController:Create>
// ...code omitted from example listing

flashingTextTickCounter = 0;
</objRmIntroController:Create>

click the add event button, select other > room start

<objRmIntroController:RoomStart>
flashingTextTickCounter = 0;
</objRmIntroController:RoomStart>

click the add event button, select step > step

<objRmIntroController:Step>
flashingTextTickCounter++;
if (flashingTextTickCounter > 1200) flashingTextTickCounter = 0;

var textDescriptionId = layer_text_get_id("Text", "textDescription");
var textAimsId = layer_text_get_id("Text", "textAims");
var textInstructionsIntroId = layer_text_get_id("Text", "textInstructionsIntro");

layer_text_alpha(textDescriptionId, 0);
layer_text_alpha(textAimsId, 0);
layer_text_alpha(textInstructionsIntroId, 0);

if (flashingTextTickCounter < 300) {
  layer_text_alpha(textDescriptionId, 1);
} else if (flashingTextTickCounter > 400 && flashingTextTickCounter < 700) {
  layer_text_alpha(textAimsId, 1);
} else if (flashingTextTickCounter > 800 && flashingTextTickCounter < 1100) {
  layer_text_alpha(textInstructionsIntroId, 1);
}
</objRmIntroController:Step>

press f5 to test the finished intro screen (confirm it looks good and the text cycles as intended), press escape when done testing

[game over screen implementation]

drag and drop (using windows explorer) the provided sprBaseGameOver.png file (in the Assets folder) into the asset browser sprites folder, origin: top left

double-click rmGameOver in the asset browser rooms folder
select the Background layer, click on the "No Sprite" value, select Sprites, then sprBaseGameOver
create a new asset layer in the layers section of the inspector tab, set the name value to Text, in grid options (main workspace area toolbar option) disable Snap
re-order the layers if required (drag and drop - Text at the top, Instances in the middle, and Background at the bottom)

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textInstructionsGameOver, position x: 138.0, position y: 325.0, scale x: 1, scale y: 1, colour: cyan (rgb:0,255,255), alignment h: centre, alignment v: centre, text: Press space key to restart

double-click objRmGameOverController in the asset browser objects folder
delete the existing Key Press - Space event

click the add event button, select create

<objRmGameOverController:Create>
gameOverTickCounter = 0;
</objRmGameOverController:Create>

click the add event button, select other > room start

<objRmGameOverController:RoomStart>
gameOverTickCounter = 0;
</objRmGameOverController:RoomStart>

click the add event button, select step > step

<objRmGameOverController:Step>
gameOverTickCounter++;

var textInstructionsGameOverId = layer_text_get_id("Text", "textInstructionsGameOver");
layer_text_alpha(textInstructionsGameOverId, 0);

if (gameOverTickCounter > 90) {
  if (gameOverTickCounter % 60 > 30) {
    layer_text_alpha(textInstructionsGameOverId, 1);
  }
  if (keyboard_check_pressed(vk_space)) {
    room_goto(rmIntro);
  }
}
</objRmGameOverController:Step>

press f5 to test the finished game over screen (confirm it looks good, restart text flashes as intended, after a short delay pressing space transitions to the intro screen), press escape when done testing

[game complete screen implementation]

drag and drop (using windows explorer) the provided sprBaseGameComplete.png file (in the Assets folder) into the asset browser sprites folder, origin: top left

double-click rmGameComplete in the asset browser rooms folder
select the Background layer, click on the "No Sprite" value, select Sprites, then sprBaseGameComplete
create a new asset layer in the layers section of the inspector tab, set the name value to Text, in grid options (main workspace area toolbar option) disable Snap
re-order the layers if required (drag and drop - Text at the top, Instances in the middle, and Background at the bottom)

drag and drop (using windows explorer) the provided sprWinner.png file (in the Assets folder) into the asset browser sprites folder
drag and drop sprWinner from the asset browser sprites folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: graphicWinner, position x: 320.0, position y: 40.0, scale x: 1, scale y: 1

drag and drop fntVisitor1 from the asset browser fonts folder into the room (place it anywhere in the room - make sure it's on the Text layer)
tag: textInstructionsGameComplete, position x: 138.0, position y: 325.0, scale x: 1, scale y: 1, colour: cyan (rgb:0,255,255), alignment h: centre, alignment v: centre, text: Press space key to restart

double-click objRmGameCompleteController in the asset browser objects folder
delete the existing Key Press - Space event

click the add event button, select create

<objRmGameCompleteController:Create>
gameCompleteTickCounter = 0;
</objRmGameCompleteController:Create>

click the add event button, select other > room start

<objRmGameCompleteController:RoomStart>
gameCompleteTickCounter = 0;
</objRmGameCompleteController:RoomStart>

click the add event button, select step > step

<objRmGameCompleteController:Step>
gameCompleteTickCounter++;

var textInstructionsGameCompleteId = layer_text_get_id("Text", "textInstructionsGameComplete");
layer_text_alpha(textInstructionsGameCompleteId, 0);

if (gameCompleteTickCounter > 120) {
  if (gameCompleteTickCounter % 60 < 30) {
    layer_text_alpha(textInstructionsGameCompleteId, 1);
  }
  if (keyboard_check_pressed(vk_space)) {
    room_goto(rmIntro);
  }
}
</objRmGameCompleteController:Step>

click the add event button, select draw > draw gui

<objRmGameCompleteController:DrawGUI>
draw_set_font(fntVisitor1);
draw_set_colour(c_yellow);
draw_set_halign(fa_center);
draw_text(320, 75, "Timer " + string_replace_all(string_format(global.levelTimerTicks/60, 8, 1), " ", ""));
draw_text(320, 95, "Cherries " + string(global.collectedCollectibles) + "/" + string(global.totalCollectibles));
draw_set_halign(fa_left); // restore default
</objRmGameCompleteController:DrawGUI>

press f5 to test the finished game over screen (confirm it looks good, score and timer shown, restart text flashes as intended, after a short delay pressing space transitions to the intro screen), press escape when done testing

-----
